/*! mss-aframe-kit v1.0.3 */
(function(u,b){typeof exports=="object"&&typeof module<"u"?b(exports):typeof define=="function"&&define.amd?define(["exports"],b):(u=typeof globalThis<"u"?globalThis:u||self,b(u.MSSAFrameKit={}))})(this,function(u){"use strict";function b(t,e,i){const s=document.querySelector("#left-hand"),o=document.querySelector("#right-hand");t==="left"?d(s,e,i):t==="right"?d(o,e,i):t==="both"&&(d(s,e,i),d(o,e,i))}function S(t,e){const i=document.querySelector("#left-hand"),s=document.querySelector("#right-hand");let o=0;e.forEach(r=>{setTimeout(()=>{console.log(`Vibrating ${t} hand for ${r.duration}ms with intensity ${r.intensity}`),t==="left"?d(i,r.duration,r.intensity):t==="right"?d(s,r.duration,r.intensity):t==="both"&&(d(i,r.duration,r.intensity),d(s,r.duration,r.intensity))},o),o+=r.duration})}function d(t,e,i){if(e<=5e3)t.setAttribute("haptics__trigger",`dur: ${e}; force: ${i}`),t.emit("trigger-vibration");else{let r=function(){o>5e3?(t.setAttribute("haptics__trigger",`dur: 5000; force: ${i}`),t.emit("trigger-vibration"),o-=5e3,setTimeout(r,5e3)):(t.setAttribute("haptics__trigger",`dur: ${o}; force: ${i}`),t.emit("trigger-vibration"))},o=e;r()}}const j=Object.freeze(Object.defineProperty({__proto__:null,initVibration:d,triggerHapticPattern:S,triggerHaptics:b},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("delayed-dynamic-body",{schema:{delay:{type:"number",default:2e3}},init:function(){const t=this.el.sceneEl,e=()=>{setTimeout(()=>{this.el.setAttribute("dynamic-body","")},this.data.delay)};t.hasLoaded?e():t.addEventListener("loaded",e)}});const D=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("holdable",{schema:{position:{type:"vec3",default:{x:0,y:0,z:0}},rotation:{type:"vec3",default:{x:0,y:0,z:0}}},init:function(){this.isHeld=!1,this.holdingHand=null,this.originalParent=this.el.parentElement,this.savedPhysics=[],this.savedSleepy=null,this.sleepyTimerActive=!1,this.previousHandPosition=null,this.handVelocity=new THREE.Vector3,this.rayActive=!1,this.insideMesh={},this.insideTestRaycaster=new THREE.Raycaster,this.insideTestRaycaster.far=10,this.onGripDown=this.onGripDown.bind(this),this.onGripUp=this.onGripUp.bind(this),this.onHitStart=this.onHitStart.bind(this),this.onHitEnd=this.onHitEnd.bind(this),this.el.addEventListener("raycaster-intersected",this.onHitStart),this.el.addEventListener("raycaster-intersected-cleared",this.onHitEnd),this.physicsDriver=this.el.sceneEl.getAttribute("physics"),this.el.classList.contains("interactable")||this.el.classList.add("interactable")},tick:function(t,e){if(this.isHeld&&this.holdingHand){const i=this.holdingHand.object3D.getWorldPosition(new THREE.Vector3);if(this.previousHandPosition){const s=i.clone().sub(this.previousHandPosition).multiplyScalar(1e3/e);this.handVelocity.copy(s)}this.previousHandPosition=i.clone()}},onHitStart:function(t){const e=t.detail.el.closest("[meta-touch-controls], [oculus-touch-controls], [hand-controls]");e&&(this.isHeld||(this.rayActive=!0,this.holdingHand=e,this.holdingHand.removeEventListener("gripdown",this.onGripDown),this.holdingHand.removeEventListener("gripup",this.onGripUp),this.holdingHand.addEventListener("gripdown",this.onGripDown),this.holdingHand.addEventListener("gripup",this.onGripUp)))},onHitEnd:function(t){const e=t.detail.el.closest("[meta-touch-controls], [oculus-touch-controls], [hand-controls]");if(!e)return;const i=e.getAttribute("id")||e.object3D.uuid,s=e.object3D.getWorldPosition(new THREE.Vector3),o=new THREE.Vector3;e.object3D.getWorldDirection(o),this.insideTestRaycaster.set(s,o.normalize());const a=this.insideTestRaycaster.intersectObject(this.el.object3D,!0).length%2===1;this.insideMesh[i]=a,!this.insideMesh[i]&&!(this.isHeld&&e===this.holdingHand)&&(e.removeEventListener("gripdown",this.onGripDown),e.removeEventListener("gripup",this.onGripUp)),this.rayActive=!1},onGripDown:function(t){const e=this.el.hasAttribute("holdable-dynamic-body"),i=Object.keys(this.el.components).some(n=>n.includes("shape__"));if(this.isHeld)return;const s=t.target.closest("[meta-touch-controls], [oculus-touch-controls], [hand-controls]");if(!s)return;if(this.holdingHand=s,this.el.hasAttribute("dynamic-body"))this.savedPhysics=[{type:"dynamic-body",config:this.el.getAttribute("dynamic-body")}],this.el.removeAttribute("dynamic-body");else if(this.el.hasAttribute("ammo-body"))this.savedPhysics=[{type:"ammo-body",config:this.el.getAttribute("ammo-body")}],this.el.removeAttribute("ammo-body");else if(this.el.hasAttribute("body")||e&&i){const n=this.el.getAttribute("body"),g=e&&i?"dynamic":n?n.type:"dynamic",y=n?n.shape:"auto",x=n?n.mass:5,z=n?n.linearDamping:"0.01",$=n?n.angularDamping:"0.01",C=n?n.sphereRadius:"",F=n?n.cylinderAxis:"";this.savedPhysics=[],g==="dynamic"&&(this.savedPhysics=[{type:"body",config:{type:g,shape:y,mass:x,linearDamping:z,angularDamping:$,sphereRadius:C,cylinderAxis:F}}],this.el.removeAttribute("body"));const G=this.el.components;for(const c in G)if(c.includes("shape__")){let m=c;if(!m.match(/\d+$/))m+="100";else{const J=parseInt(m.match(/\d+$/)[0]);m=m.replace(/\d+$/,J+100)}const q=this.el.getAttribute(c).shape,k=this.el.getAttribute(c).offset,W=this.el.getAttribute(c).orientation,I=this.el.getAttribute(c).radius,U=this.el.getAttribute(c).halfExtents,N=this.el.getAttribute(c).radiusTop,B=this.el.getAttribute(c).radiusBottom,K=this.el.getAttribute(c).height,Q=this.el.getAttribute(c).numSegments;this.savedPhysics.push({type:m,config:{shape:q,offset:k,orientation:W,radius:I,halfExtents:U,radiusTop:N,radiusBottom:B,height:K,numSegments:Q}})}this.el.hasAttribute("sleepy")&&(this.savedSleepy=this.el.getAttribute("sleepy"),this.el.removeAttribute("sleepy"))}this.isHeld=!0,this.previousHandPosition=this.holdingHand.object3D.getWorldPosition(new THREE.Vector3),this.handVelocity.set(0,0,0);const o=this.holdingHand.object3D,a=(this.holdingHand.getAttribute("meta-touch-controls")||this.holdingHand.getAttribute("oculus-touch-controls")||this.holdingHand.getAttribute("hand-controls")||{}).hand||"right";o.updateMatrixWorld(!0),this.el.object3D.updateMatrixWorld(!0);const l=this.el.object3D.matrixWorld.clone(),p=new THREE.Matrix4().copy(o.matrixWorld).invert(),E=new THREE.Matrix4().multiplyMatrices(p,l),A=new THREE.Vector3,H=new THREE.Quaternion,V=new THREE.Vector3;E.decompose(A,H,V);let h,f=!1,T=!1;if(this.data.position.x!==0||this.data.position.y!==0||this.data.position.z!==0)h=new THREE.Vector3(this.data.position.x,this.data.position.y,this.data.position.z),h.x=a==="left"?-h.x:h.x,f=!0;else{const n=this.el.sceneEl.getAttribute("data-grab-position");n?(h=new THREE.Vector3().copy(AFRAME.utils.coordinates.parse(n)),h.x=a==="left"?-h.x:h.x,f=!0,T=!0):(h=A,f=!1)}let v;if(this.data.rotation.x!==0||this.data.rotation.y!==0||this.data.rotation.z!==0){let n=a==="left"?-this.data.rotation.y:this.data.rotation.y,g=a==="left"?-this.data.rotation.z:this.data.rotation.z;const y=new THREE.Euler(THREE.MathUtils.degToRad(this.data.rotation.x),THREE.MathUtils.degToRad(n),THREE.MathUtils.degToRad(g));v=new THREE.Quaternion().setFromEuler(y)}else v=H;let _;if(f){let n;if(T)n=new THREE.Box3().setFromObject(this.el.object3D).getSize(new THREE.Vector3);else{const y=this.el.object3D.clone();y.quaternion.copy(v),y.updateMatrixWorld(!0),n=new THREE.Box3().setFromObject(y).getSize(new THREE.Vector3)}const g=new THREE.Vector3;a==="left"?g.set(-n.x/2,-n.y/2,n.z/2):g.set(n.x/2,-n.y/2,n.z/2),_=h.clone().sub(g)}else _=A;o.attach(this.el.object3D),this.el.object3D.position.copy(_),this.el.object3D.quaternion.copy(v),this.el.object3D.updateMatrixWorld(!0)},onGripUp:function(t){if(!this.isHeld||!this.holdingHand)return;if(this.el.object3D.updateMatrixWorld(!0),this.originalParent.object3D.attach(this.el.object3D),this.el.object3D.updateMatrixWorld(!0),this.savedPhysics&&(this.savedPhysics.forEach(o=>{this.el.setAttribute(o.type,o.config)}),this.savedPhysics=null),this.savedSleepy&&(this.sleepyTimerId?clearTimeout(this.sleepyTimerId):this.sleepyTimerActive=!0,this.sleepyTimerId=setTimeout(()=>{this.el.setAttribute("sleepy",`allowSleep: true; speedLimit: ${this.savedSleepy.speedLimit}; delay: ${this.savedSleepy.delay}; angularDamping: ${this.savedSleepy.angularDamping}; linearDamping: ${this.savedSleepy.linearDamping}; holdState: ${this.savedSleepy.holdState};`),this.savedSleepy=null,this.sleepyTimerActive=!1,this.sleepyTimerId=null},4e3)),this.el.hasAttribute("holdable-dynamic-body")&&!this.el.hasAttribute("body")){this.el.hasAttribute("static-body")&&this.el.removeAttribute("static-body");const o=this.el.getAttribute("holdable-dynamic-body");this.el.setAttribute("dynamic-body",o)}this.isHeld=!1,setTimeout(()=>{if(this.el.body&&this.handVelocity){let o=this.handVelocity.clone().multiplyScalar(1.5);o.y+=1,this.physicsDriver.driver==="local"?this.el.body.velocity.set(o.x,o.y,o.z):this.physicsDriver.driver==="ammo"&&this.el.body.setLinearVelocity(new Ammo.btVector3(o.x,o.y,o.z))}},50);const e=document.querySelectorAll("[meta-touch-controls], [oculus-touch-controls], [hand-controls]");e&&e.forEach(o=>{const a=(o.getAttribute("meta-touch-controls")||o.getAttribute("oculus-touch-controls")||o.getAttribute("hand-controls")||{}).hand||"right",l=o.querySelector("[raycaster]"),p=l==null?void 0:l.getAttribute("raycaster");if(p&&typeof p.far=="number"&&!l.getAttribute(`data-tempFar-active-${a}`)){l.setAttribute(`data-tempFar-active-${a}`,"true");const E=p.far;l.setAttribute("raycaster","far: 0"),setTimeout(()=>{l.setAttribute("raycaster",`far: ${E}`),l.removeAttribute(`data-tempFar-active-${a}`)},50)}});const i=this.holdingHand.object3D.getWorldPosition(new THREE.Vector3);new THREE.Box3().setFromObject(this.el.object3D).containsPoint(i)||(this.holdingHand.removeEventListener("gripdown",this.onGripDown),this.holdingHand.removeEventListener("gripup",this.onGripUp),this.holdingHand=null)},remove:function(){this.el.removeEventListener("raycaster-intersected",this.onHitStart),this.el.removeEventListener("raycaster-intersected-cleared",this.onHitEnd),this.holdingHand&&(this.holdingHand.removeEventListener("gripdown",this.onGripDown),this.holdingHand.removeEventListener("gripup",this.onGripUp))}});const R=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("music-player",{schema:{songs:{type:"array",default:[]}},init:function(){const t=this.el.sceneEl,e=document.querySelector("#left-hand");if(!e){console.error("No #left-hand controller found for music-player");return}if(e.addEventListener("xbuttonup",()=>this.togglePause()),e.addEventListener("ybuttonup",()=>this.nextTrack()),document.addEventListener("keyup",i=>{i.code==="Space"?this.togglePause():i.code==="KeyN"&&this.nextTrack()}),this.data.songs.length===0){let i=localStorage.getItem("musicPlayerSongs");if(i)try{let s=JSON.parse(i);Array.isArray(s)&&s.length>0&&(this.data.songs=s)}catch(s){console.warn("Error parsing musicPlayerSongs from localStorage",s)}}if(this.data.songs.length===0){console.warn("No songs found for music-player");return}this.currentPlaylist=this.shuffle(this.data.songs.slice()),this.audio=new Audio,this.audio.addEventListener("ended",()=>{this.playNextSong()}),this.audio.addEventListener("error",i=>{console.error("Error loading song: "+this.currentSong,i),this.playNextSong()}),this.boundStartPlayback=this.startPlayback.bind(this),document.addEventListener("click",this.boundStartPlayback,{once:!0}),t.addEventListener("enter-vr",()=>{AFRAME.utils.device.checkHeadsetConnected()&&(console.log("VR entered, starting music playback"),this.boundStartPlayback(),document.removeEventListener("click",this.boundStartPlayback))})},startPlayback:function(){this.playNextSong()},playNextSong:function(){this.currentPlaylist.length===0&&(this.currentPlaylist=this.shuffle(this.data.songs.slice()),console.log("Playlist resetting"));let t=this.currentPlaylist.pop();t=t.trim(),t.startsWith("'")&&(t=t.slice(1)),t.endsWith("'")&&(t=t.slice(0,-1)),this.currentSong=t,console.log("Playing: "+t),this.audio.src="assets/audio/music/"+encodeURI(t),this.audio.play()},togglePause:function(){this.audio.paused?this.audio.play():this.audio.pause()},nextTrack:function(){this.playNextSong()},shuffle:function(t){for(let e=t.length-1;e>0;e--){let i=Math.floor(Math.random()*(e+1));[t[e],t[i]]=[t[i],t[e]]}return t}});const P=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("raycaster-listener",{init:function(){console.log("Raycaster Listener initialized");const t=this.el,e="#ffffff",i=document.querySelectorAll(".styled-ray"),s=document.querySelector("#reticle");t.addEventListener("raycaster-intersected",function(o){i.forEach(function(a){a.setAttribute("material","color","#A2F5A2")}),s&&s.setAttribute("geometry","radius",".008");const r=o.detail.el.closest("[meta-touch-controls], [oculus-touch-controls], [hand-controls]");if(r){const l=(r.getAttribute("meta-touch-controls")||r.getAttribute("oculus-touch-controls")||r.getAttribute("hand-controls")||{}).hand||"right";b(l,150,.1)}}),t.addEventListener("raycaster-intersected-cleared",function(){i.forEach(function(o){o.setAttribute("material","color",e)}),s&&s.setAttribute("geometry","radius",".005")})}});const M=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("raycaster-manager",{init:function(){console.log("Raycaster Manager initialized");const t=document.querySelector("#left-hand"),e=document.querySelector("#right-hand");t&&e&&(t.addEventListener("triggerdown",()=>this.toggleRaycaster("left")),e.addEventListener("triggerdown",()=>this.toggleRaycaster("right")))},toggleRaycaster:function(t){const e=document.querySelector(`#${t}-hand .actual-ray`);e.getAttribute("raycaster").enabled?(console.log("Raycaster already active on this controller:",t),e.components.raycaster.intersectedEls.length||(console.log("No intersection detected. Disabling raycaster on:",t),this.disableRaycaster(t))):(console.log("Enabling raycaster on:",t),this.enableRaycaster(t))},disableRaycaster:function(t){const e=document.querySelector(`#${t}-hand .styled-ray`),i=document.querySelector(`#${t}-hand .actual-ray`);e==null||e.setAttribute("visible",!1),i==null||i.setAttribute("raycaster","enabled",!1)},enableRaycaster:function(t){const e=document.querySelector(`#${t}-hand .styled-ray`),i=document.querySelector(`#${t}-hand .actual-ray`);e==null||e.setAttribute("visible",!0),i==null||i.setAttribute("raycaster",{enabled:!0}),e&&this.playSound(e);const s=t==="left"?"right":"left";this.disableRaycaster(s)},playSound:function(t){let e=t.components.sound;e&&e.playSound()}});const w=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("refresh-raycaster-on-model-load",{init:function(){const t=document.querySelectorAll("[gltf-model]");let e=Array.from(t).filter(o=>{var r,a;return(a=(r=o.components)==null?void 0:r["gltf-model"])==null?void 0:a.model}).length;const i=t.length,s=()=>{e===i&&document.querySelectorAll("[raycaster]").forEach(o=>{o.components.raycaster.refreshObjects()})};s(),t.forEach(o=>{o.addEventListener("model-loaded",()=>{e++,s()})})}});const L=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("vr-logger",{schema:{maxMessages:{type:"int",default:5}},init:function(){const t=localStorage.getItem("enableVrLogger");if(!t||t!=="true"){console.log("VR Logger is disabled.");return}this.messages=[],this.el.setAttribute("text",{color:"white",width:3,wrapCount:45,align:"left"});const e=console.log;console.log=(...i)=>{e(...i),this.addMessage(i.map(s=>s.toString()).join(" "))}},addMessage:function(t){this.messages.length>=this.data.maxMessages&&this.messages.shift(),this.messages.push(t+`
`),this.updateText()},updateText:function(){this.el.setAttribute("text","value",this.messages.join(`
`))}});const O=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));AFRAME.registerComponent("vr-mode-detect",{init:function(){const t=this.el.sceneEl,e=document.getElementById("reticle");t==null||t.addEventListener("enter-vr",function(){AFRAME.utils.device.checkHeadsetConnected()&&(e==null||e.setAttribute("visible","false"),e==null||e.setAttribute("raycaster","enabled",!1))}),t==null||t.addEventListener("exit-vr",function(){e==null||e.setAttribute("visible","true"),e==null||e.setAttribute("raycaster","enabled",!0)})}}),console.log("MSS A-Frame Kit Loaded",Object.assign({"./components/_helpers/helpers.js":j,"./components/delayed-dynamic-body/delayed-dynamic-body.js":D,"./components/holdable/holdable.js":R,"./components/music-player/music-player.js":P,"./components/raycaster-listener/raycaster-listener.js":M,"./components/raycaster-manager/raycaster-manager.js":w,"./components/refresh-raycaster-on-model-load/refresh-raycaster-on-model-load.js":L,"./components/vr-logger/vr-logger.js":O,"./components/vr-mode-detect/vr-mode-detect.js":Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}))})),u.initVibration=d,u.triggerHapticPattern=S,u.triggerHaptics=b,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=mss-aframe-kit.min.js.map
